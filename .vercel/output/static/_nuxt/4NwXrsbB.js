import{bg as b,bh as d,ao as l,D as m,bi as _,aW as g,p as I,be as P}from"./C3kjzMtU.js";const y=I({transition:{type:null,default:"fade-transition",validator:e=>e!==!0}},"transition"),O=(e,t)=>{let{slots:n}=t;const{transition:s,disabled:r,group:a,...i}=e,{component:u=a?d:l,...c}=b(s)?s:{};let o;return b(s)?o=m(c,_({disabled:r,group:a}),i):o=m({name:r||!s?"":s},i),g(u,o,n)};function T(e,t){if(!P)return;const n=t.modifiers||{},s=t.value,{handler:r,options:a}=typeof s=="object"?s:{handler:s,options:{}},i=new IntersectionObserver(function(){let u=arguments.length>0&&arguments[0]!==void 0?arguments[0]:[],c=arguments.length>1?arguments[1]:void 0;const o=e._observe?.[t.instance.$.uid];if(!o)return;const f=u.some(v=>v.isIntersecting);r&&(!n.quiet||o.init)&&(!n.once||f||o.init)&&r(f,u,c),f&&n.once?p(e,t):o.init=!0},a);e._observe=Object(e._observe),e._observe[t.instance.$.uid]={init:!1,observer:i},i.observe(e)}function p(e,t){const n=e._observe?.[t.instance.$.uid];n&&(n.observer.unobserve(e),delete e._observe[t.instance.$.uid])}const $={mounted:T,unmounted:p};export{$ as I,O as M,y as m};
